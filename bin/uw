use uniname-words:ver<10.0.7>:auth<zef:lizmat>;
my %*SUB-MAIN-OPTS = :named-anywhere;

unit sub MAIN(
       *@words,    #= one or more words / regexes
  Bool :$partial,  #= allow for partial matches, default: no
  Bool :$any,      #= show any string matches, default: all
  Bool :$hex,      #= show hex representation, default: no
  Bool :$name,     #= show name, default: no
  Bool :$char,     #= show the actual character, default: no
);

sub hex(        int $_) { .fmt: '%5X'                    }
sub name(       int $_) { .uniname                       }
sub char(       int $_) { .chr                           }
sub namechar(   int $_) { "&name($_) &char($_)"          }
sub hexname(    int $_) { "&hex($_) &name($_)"           }
sub hexchar(    int $_) { "&hex($_) &char($_)"           }
sub hexnamechar(int $_) { "&hex($_) &name($_) &char($_)" }

my &mapper = &::(
  ("hex" if $hex) ~ ("name" if $name) ~ ("char" if $char)
) || &hexnamechar;

if @words.map: {
    if $_ {
        if .contains(/ \W /) {
            with try .EVAL {
                $_
            }
        }
        else {
            $_
        }
    }
} -> @WORDS {
    say mapper($_) for uniname-words(@WORDS, :$partial, :$any);
}
else {
    note "uniname-words - Look up words or regexes in the installed unicode database.\n";
    note $*USAGE;
    exit 1;
}

# vim: expandtab shiftwidth=4
